
$rg = "RG-FRONTDOOR2"
$profile = "my-front-door-delme"

$endpointService1 = "endpoint-Service1"
$endpointService2 = "endpoint-Service2"
$endpointService3 = "endpoint-Service3"

$oGroupSvc1="group-service1"
$oGroupSvc2="group-service2"
$oGroupSvc3="group-service3"

$svcOrigin11="origin11"
$svcOrigin12="origin12"
$svcUrl11="google.com"
$svcUrl12="www.google.com"

$svcOrigin21="origin21"
$svcUrl21="daenet.com"

$svcOrigin31="origin31"
$svcUrl31="daenet.com"

az group create -n $rg -l northeurope

############################
### Create AFD Profile   ###
############################

az afd profile create --profile-name $profile --sku  Standard_AzureFrontDoor --resource-group $rg --tags project=daenet-global owner=ddobric@daenet.com

#############################
### Create Origin Group 1 ###
#############################


az afd origin-group create -g $rg --origin-group-name $oGroupSvc1 --profile-name $profile --probe-request-type GET --probe-protocol Http --probe-interval-in-seconds 120 --probe-path / --sample-size 4 --successful-samples-required 3 --additional-latency-in-milliseconds 50

az afd origin create -g $rg --host-name $svcUrl11 --profile-name $profile --origin-group-name $oGroupSvc1 --origin-name $svcOrigin11 --origin-host-header $svcUrl11 --priority 1 --weight 500 --enabled-state Enabled --http-port 80 --https-port 443
az afd origin create -g $rg --host-name $svcUrl12 --profile-name $profile --origin-group-name $oGroupSvc1 --origin-name $svcOrigin12 --origin-host-header $svcUrl12 --priority 2 --weight 500 --enabled-state Enabled --http-port 80 --https-port 443


#############################
### Create Origin Group 2 ###
#############################

az afd origin-group create -g $rg --origin-group-name $oGroupSvc2 --profile-name $profile --probe-request-type GET --probe-protocol Http --probe-interval-in-seconds 120 --probe-path / --sample-size 4 --successful-samples-required 3 --additional-latency-in-milliseconds 50

az afd origin create -g $rg --host-name $svcUrl21 --profile-name $profile --origin-group-name $oGroupSvc2 --origin-name $svcOrigin21 --origin-host-header $svcUrl21 --priority 1 --weight 500 --enabled-state Enabled --http-port 80 --https-port 443

#############################
### Create Origin Group 3 ###
#############################

az afd origin-group create -g $rg --origin-group-name $oGroupSvc3 --profile-name $profile --probe-request-type GET --probe-protocol Http --probe-interval-in-seconds 120 --probe-path / --sample-size 4 --successful-samples-required 3 --additional-latency-in-milliseconds 50

az afd origin create -g $rg --host-name $svcUrl31 --profile-name $profile --origin-group-name $oGroupSvc3 --origin-name $svcOrigin31 --origin-host-header $svcUrl31 --priority 1 --weight 500 --enabled-state Enabled --http-port 80 --https-port 443


########################
### Create Endpoints ###
########################

# Endpoint service 1
az afd endpoint delete -g $rg --endpoint-name $endpointService1 --profile-name $profile -y

az afd endpoint create -g $rg --endpoint-name $endpointService1 --profile-name $profile --enabled-state Enabled


# Endpoint service 2
az afd endpoint delete -g $rg --endpoint-name $endpointService2 --profile-name $profile -y

az afd endpoint create -g $rg --endpoint-name $endpointService2 --profile-name $profile --enabled-state Enabled


# Endpoint service 3
az afd endpoint delete -g $rg --endpoint-name $endpointService3 --profile-name $profile -y

az afd endpoint create -g $rg --endpoint-name $endpointService3 --profile-name $profile --enabled-state Enabled


########################
### Create Routes    ###
########################

# az webapp show -g "RG-DEVELOPERS-DE" -n "developersde" --query "defaultHostName"

# Create route service 1
az afd route delete -g $rg --endpoint-name $endpointService1 --profile-name $profile --route-name "route-to-service1" -y

az afd route create -g $rg --endpoint-name $endpointService1 --profile-name $profile --route-name "route-to-service1" --https-redirect Disabled --origin-group $oGroupSvc1 --supported-protocols Https --link-to-default-domain Enabled --forwarding-protocol MatchRequest


# Create route service 2
az afd route delete -g $rg --endpoint-name $endpointService2 --profile-name $profile --route-name "route-to-service2" -y

az afd route create -g $rg --endpoint-name $endpointService2 --profile-name $profile --route-name "route-to-service2" --https-redirect Disabled --origin-group $oGroupSvc2 --supported-protocols Https --link-to-default-domain Enabled --forwarding-protocol MatchRequest


# Create route service 3
az afd route delete -g $rg --endpoint-name $endpointService3 --profile-name $profile --route-name "route-to-service3" -y

az afd route create -g $rg --endpoint-name $endpointService3 --profile-name $profile --route-name "route-to-service3" --https-redirect Disabled --origin-group $oGroupSvc3 --supported-protocols Https --link-to-default-domain Enabled --forwarding-protocol MatchRequest


az ad sp create-for-rbac -n "vcd-devops-principal" --role Owner --scopes /subscriptions/3b0f78fd-01d5-4c43-a2ae-3a6f6b8cabe7


########################################
Useful Query Statements

az afd profile list

az afd endpoint list -g "RG-DAENET-GLOBAL" --profile-name "daenet-acpdigital" -o table

az afd origin-group list -g "RG-DAENET-GLOBAL" --profile-name "daenet-acpdigital" -o table

az afd route list -g "RG-DAENET-GLOBAL" --profile-name "daenet-acpdigital" --endpoint-name "covidservice-prod" -o table

# Gets the webapp uri 
$cpdmblazoruri =$(az webapp show --name $cpdmblazorname  -g $(rg) --query 'fullyQualifiedDomainName' --output tsv)

# Count the number of elements in the array.
az afd endpoint list -g "RG-CPDM-PROD" --profile-name "hbdoortestdelme"  --query "[?name=='CpdmSvcEndpoint2'] | length(@)"

$res=(az afd endpoint list -g "RG-CPDM-PROD" --profile-name "hbdoortestdelme"  --query "[?name=='CpdmSvcEndpoint2'] | length(@)")
if($res -eq "1") `
{ `
    echo ":)" `
} `
else `
{ `
    echo ":(" `
} `





